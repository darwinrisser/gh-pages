{"version":3,"sources":["modules/Nav.js","modules/Main.js","modules/Work.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","react_default","a","createElement","className","href","target","class","style","home","onClick","changeState","work","Main","id","Work","src","alt","App","state","display","homeStyle","workStyle","num","_this","setState","content","this","modules_Main","modules_Work","modules_Nav","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8c9ae339.chunk.js","sourcesContent":["import React from 'react';\r\nimport './css/Nav.css'\r\n\r\nconst Nav = (props) => {\r\n   return(\r\n    <div className=\"Nav\">\r\n      <div className=\"name\">\r\n        <span className=\"title\">Darwin Risser</span>\r\n        <a href=\"https://github.com/drisser\" target=\"_blank\"><span className=\"icons\"><i class=\"fab fa-github\"></i></span></a>\r\n        <a href=\"https://www.linkedin.com/in/darwinrisser/\" target=\"_blank\"><span className=\"icons\"><i class=\"fab fa-linkedin\"></i></span></a>   \r\n      </div>\r\n      <div className=\"links\">\r\n        <span style={props.home} onClick={()=>{\r\n          props.changeState(0)}} >Home</span>\r\n        <span style={props.work} onClick={()=>{\r\n          props.changeState(1)}} >Work</span>\r\n        <span><a href=\"mailto: risser.darwin@gmail.com\" target=\"_blank\" className=\"navLink\">Contact</a></span>\r\n      </div>      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport './css/Main.css'\r\n\r\nconst Main = (props) => {\r\n  return(\r\n    <div className=\"main\" id=\"main\">\r\n      <div className=\"container\">\r\n        <h1>Darwin Risser</h1>\r\n        <h2>FRONT-END DEVELOPER</h2>\r\n        <button><i class=\"fas fa-file\"></i> Resume</button>\r\n        <button onClick={()=>{\r\n            props.changeState(1)}}><i class=\"fas fa-laptop-code\"></i> Work</button>\r\n        <button><a href=\"mailto: risser.darwin@gmail.com\" target=\"_blank\" className=\r\n        \"mainLink\"><i class=\"fas fa-envelope\"></i> Contact</a></button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport './css/Work.css'\r\n\r\nconst Work = (props) => {\r\n  return(\r\n    <div className=\"content\">\r\n      <div className=\"box\">\r\n          <div className=\"example\">\r\n            <h3>\r\n              Game of Thrones Quiz\r\n            </h3>\r\n            <p>\r\n              Javascript quiz game. Built in React.<br/>\r\n            </p>\r\n            <a href=\"https://drisser.github.io/got-react/\" target=\"_blank\"><img src=\"https://i.imgur.com/YQaE2Cp.jpg\" alt=\"webpage example\"/></a>\r\n          </div>\r\n          <div className=\"example\">\r\n            <h3>\r\n              Blue VPN\r\n            </h3>\r\n            <p>\r\n              SPA for a hypothetical business. Highly responsive design.\r\n            </p>\r\n            <a href=\"https://drisser.github.io/gh-pages/blue-vpn/\" target=\"_blank\"><img src=\"https://i.imgur.com/AdzDtix.jpg\" alt=\"webpage example\"/></a>\r\n          </div>\r\n          <div className=\"example\">\r\n            <h3>\r\n              Bitcoin Miner\r\n            </h3>\r\n            <p>\r\n              Simple Javascript game based on clicking a button to \"mine\" Bitcoin.\r\n            </p>\r\n            <a href=\"https://drisser.github.io/gh-pages/bitcoin-miner/\" target=\"_blank\"><img src=\"https://i.imgur.com/KD5KKcQ.jpg\" alt=\"webpage example\"/></a>\r\n          </div>\r\n          <div className=\"example\">\r\n            <h3>\r\n              River Rat Raku\r\n            </h3>\r\n            <p>\r\n              SPA for my uncle's pottery business. Built in React.\r\n            </p>\r\n            <a href =\"https://drisser.github.io/gh-pages/river-rat-raku/\" target=\"_blank\"><img src=\"https://i.imgur.com/C6NahJL.jpg\" alt=\"webpage example\"/></a>\r\n          </div>\r\n          <div className=\"example\">\r\n            <h3>\r\n              Placeholder Project\r\n            </h3>\r\n            <p>\r\n              Eventually another project will go here.\r\n            </p>\r\n            <img src=\"https://i.imgur.com/aQx7JSJ.jpg\" alt=\"webpage example\"/>\r\n          </div>\r\n          <div className=\"example\">\r\n            <h3>\r\n              Placeholder Project\r\n            </h3>\r\n            <p>\r\n              Eventually another project will go here.\r\n            </p>\r\n            <img src=\"https://i.imgur.com/aQx7JSJ.jpg\" alt=\"webpage example\"/>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Work;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Nav from './modules/Nav.js';\r\nimport Main from './modules/Main.js';\r\nimport Work from './modules/Work.js'\r\n\r\nclass App extends Component {\r\n\r\n  state={\r\n    display: 0,\r\n    homeStyle: true,\r\n    workStyle: false\r\n  }\r\n   \r\n  changeState = (num) => {\r\n    this.setState(()=>{\r\n      return {display:num}\r\n    })\r\n    if (num === 0){\r\n      this.setState(()=>{\r\n        return {homeStyle:true, workStyle:false}\r\n      })} else if (num === 1){\r\n            this.setState(()=>{\r\n              return {homeStyle:false, workStyle:true}\r\n          })}\r\n  }\r\n  \r\n  render() {\r\n    let content = null;\r\n    if (this.state.display === 0){\r\n      content = <Main changeState={this.changeState}/>\r\n    } else if (this.state.display === 1){\r\n      content = <Work/>\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Nav changeState={this.changeState} display={this.state.display} homeStyle={this.state.homeStyle} workStyle={this.state.workStyle}/>\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}